[["index.html", "I am Bilingual - Python and R Preface", " I am Bilingual - Python and R Priyanga Dilini Talagala Thiyanga S. Talagala 2021-10-20 Preface WIP!! This book is still in progress in various draft forms. "],["intro.html", "Chapter 1 Introduction to R and Python 1.1 About R and Python 1.2 History of R and Python 1.3 Story behind their names 1.4 Logo 1.5 Worldwide Google Trends 1.6 Installation 1.7 Install and Load Libraries 1.8 Ranked:15Python packages", " Chapter 1 Introduction to R and Python R Vs Python: What’s the Difference? https://www.guru99.com/r-vs-python.html 1.1 About R and Python 1.1.1 R R is an object oriented, open source programming language and environment for statistical computing and graphics. R is not a statistics system but an environment within which statistical techniques are implemented. Further, R gains more capabilities via packages, its fundamental shareable units that bundle together R functions, code, data, documentation, and tests etc. (R Core Team 2020). 1.1.2 Python Python is an object-oriented, interpreted, and interactive programming language. The motto of Python language is “Batteries included” as the functionality of the language can be performed via its comprehensive standard in built Libraries (Wikipedia contributors 2020a). 1.2 History of R and Python 1.2.1 R R is an implementation of the S programming language which was created by John Chambers in 1976. In 1991, an alternative implementation of the basic S language was developed by Ross Ihaka and Robert Gentleman, University of Auckland, New Zealand. It was published in 1993 (Wikipedia contributors 2020b). 1.2.2 Python In 1989, Guido van Rossum at Centrum Wiskunde &amp; Informatica (CWI) in the Netherlands started the implementation of Python as a successor to ABC programming language. Python 2.0 was released in 2000. Python 3.0, a major revision of the language that is not completely backward-compatible was released in 2008 (Wikipedia contributors 2020a) . Today many developers create libraries strictly for the use with Python 3. 1.3 Story behind their names 1.3.1 R R was introduced by Ross Ihaka and Robert Gentleman and it was named after the first names of the two authors. The name of the “S” language also had some influence on the selection of its name and it was selected partly as a play on the name of S (Wikipedia contributors 2020b). 1.3.2 Python Python was named after a famous TV show ‘Monty Python’s Flying Circus’. Guido van Rossum, the creater of Python was a big fan of the TV show. He wanted to name his invention with a short, unique and slightly mysterious name and chose Python as a working title for his ongoing project. 1.4 Logo Figure 1.1: Retrieved from: https://www.r-project.org/logo/ Figure 1.2: Retrieved from: https://www.python.org/community/logos/ 1.5 Worldwide Google Trends 1.6 Installation 1.6.1 R You can download it for free from the following websites: - R (https://cran.r-project.org/) Install Rstudio IDE RStudio is an integrated development environment for R, a programming language for statistical computing and graphics. It is available in two formats: RStudio Desktop is a regular desktop application while RStudio Server runs on a remote server and allows accessing RStudio using a web browser. RStudio (https://www.rstudio.com/products/rstudio/download/#download). 1.6.2 Python Ref: https://www.w3schools.com/python/python_getstarted.asp Many PCs and Macs will have python already installed. To check if you have python installed on a Windows PC, search in the start bar for Python or run the following on the Command Line (cmd.exe): C:\\Users\\Your Name&gt;python --version To check if you have python installed on a Linux or Mac, then on linux open the command line or on Mac open the Terminal and type: python --version If you find that you do not have python installed on your computer, then you can download it for free from the following website: https://www.python.org/ Install PyCharm IDE PyCharm is a cross-platform IDE that provides consistent experience on the Windows, macOS, and Linux operating systems. PyCharm is available in three editions: Professional, Community, and Edu. The Community and Edu editions are open-source projects and they are free, but they have fewer features. PyCharm Edu provides courses and helps you learn programming with Python. The Professional edition is commercial, and provides an outstanding set of tools and features. For details, see the editions comparison matrix. 1.7 Install and Load Libraries 1.7.1 R R Packages: A Beginner’s Guide https://www.datacamp.com/community/tutorials/r-packages-guide?utm_source=adwords_ppc&amp;utm_campaignid=1655852085&amp;utm_adgroupid=61045434222&amp;utm_device=c&amp;utm_keyword=%2Bload%20%2Bpackage%20%2Br&amp;utm_matchtype=b&amp;utm_network=g&amp;utm_adpostion=&amp;utm_creative=469789579329&amp;utm_targetid=aud-522010995285:kwd-589281898774&amp;utm_loc_interest_ms=9071445&amp;utm_loc_physical_ms=1009919&amp;gclid=Cj0KCQjwyZmEBhCpARIsALIzmnKGh4ZVHa4OxhLq0JUzpoBMMRhQvCGEmvscFuLZ5CI3V3JPsQ2v9P8aAhwpEALw_wcB An R package is a way to organize your own work and share it with others. Typically, a package contains code, documentation for the package and the functions inside, some tests to check everything works as it should, and data sets. Three of the most popular repositories for R packages are: CRAN, Bioconductor and Github. 1.7.1.1 Installing Packages From CRAN install.packages(\"package_name\") Example install.packages(\"tidyverse\") After running this, some messages will be diplayed on the console. They will depend on what operating system you are using, the dependencies, and if the package was successfully installed. To install more than a package at the same time, we can use a character vector install.packages(c(\"vioplot\", \"MASS\")) The function install.packages will download the source code from on the CRAN mirrors and install the package (and any dependencies) locally on your computer. You have to install a package only once. 1.7.1.2 Load Packages After a package is installed, you are ready to use its functionalities. If you just need a sporadic use of a few functions or data inside a package you can access them with the notation packagename::functionname(). If you will make a more intensive use of the package, then maybe is worth to load it into memory. The simplest way to do this is with the library() command. Please note that the input of install.packages() is a character vector and requires the name to be in quotes, while library() accepts either character or name and makes it possible for you to write the name of the package without quotes. Once you have the package installed, you can load the library into your R session for use. Any of the functions that are specific to that package will be available for you to use by simply calling the function as you would for any of the base functions. Note that quotations are not required here. library(tidyverse) 1.7.2 Python Use ‘import module’ or ‘from module import?’ https://stackoverflow.com/questions/710551/use-import-module-or-from-module-import Method 1: import module Method 2: from module import foo The difference between import module and from module import foo is subjective. User can select one method and be consitent in the use of it. import module from module import foo Pros Pros - Less Maintanence of the import statements - Less typying to use foo function - Don’t need to add any aditional imports to start using another item from the same module - More control over whcih items of the module can be accessed Cons Cons - Typing module.foo in the code be tedious (dull, boring ) to use new items from the module the user have to update the import statement It can be minimized by using import module as mo, then typing mo.foo | You loose context about foo. For example it is less clear ceil() does, compared to math.ceil() Don’t use from modle import * Because it clutters or fills with untidy collection of things in the namespace import * For any reasonable large set of code, if you import * you will likely be cementing it into the module, unable to be removed. This is because now it is difficullt to identiify what items used in the code are coming from module. 1.8 Ranked:15Python packages for Data Science http://blog.thedataincubator.com/wp-content/uploads/2017/04/Ranked-15-Python-Packages-for-Data-Science.pdf References "],["variables-expressions-and-statements.html", "Chapter 2 Variables, expressions, and statements 2.1 Basic Exmaple", " Chapter 2 Variables, expressions, and statements 2.1 Basic Exmaple This is a test code 2.1.1 R code # This is an R code x &lt;- 1 y &lt;- 3 print(x+y) ## [1] 4 2.1.2 Python Code The ‘python’ engine in knitr requires the reticulate package. library(reticulate) # This is a Python code x = 1 y = 3 print(x+y) ## 4 "],["conditional-execution.html", "Chapter 3 Conditional execution", " Chapter 3 Conditional execution WIP "],["functions.html", "Chapter 4 Functions", " Chapter 4 Functions WIP "],["iteration.html", "Chapter 5 Iteration", " Chapter 5 Iteration WIP "],["tidy-workflow.html", "Chapter 6 Tidy workflow", " Chapter 6 Tidy workflow WIP Moving from R to Python: The Libraries You Need to Know https://www.kdnuggets.com/2017/02/moving-r-python-libraries.html "],["import.html", "Chapter 7 Import", " Chapter 7 Import WIP "],["tidy.html", "Chapter 8 Tidy", " Chapter 8 Tidy WIP "],["transform.html", "Chapter 9 Transform", " Chapter 9 Transform WIP "],["data-visualization.html", "Chapter 10 Data Visualization 10.1 Data 10.2 R 10.3 Python", " Chapter 10 Data Visualization 10.1 Data The Palmer penguins dataset was introduced by Allison Horst, Alison Hill, and Kristen Gorman provide a great dataset for data exploration and visualization, as an alternative to iris. It was first introduced as an R package. The released version of palmerpenguins can be instaalled from CRAN with: R Installation install.packages(\"palmerpenguins\") Using palmerpenguins python package you can easily load the Palmer penguins into your python environment. Python Installation pip install palmerpenguins The palmerpenguins package contains two datasets : penguins and penguins_raw. penguins is a simplified version of the penguins_raw data. 10.2 R Load data # Load Palmer Archipelago (Antarctica) Penguin Data library(palmerpenguins) # Return the first part of the dataset head(penguins) ## # A tibble: 6 × 8 ## species island bill_length_mm bill_depth_mm flipper_length_… body_mass_g sex ## &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;fct&gt; ## 1 Adelie Torge… 39.1 18.7 181 3750 male ## 2 Adelie Torge… 39.5 17.4 186 3800 fema… ## 3 Adelie Torge… 40.3 18 195 3250 fema… ## 4 Adelie Torge… NA NA NA NA &lt;NA&gt; ## 5 Adelie Torge… 36.7 19.3 193 3450 fema… ## 6 Adelie Torge… 39.3 20.6 190 3650 male ## # … with 1 more variable: year &lt;int&gt; # Retrieve column names colnames(penguins) ## [1] &quot;species&quot; &quot;island&quot; &quot;bill_length_mm&quot; ## [4] &quot;bill_depth_mm&quot; &quot;flipper_length_mm&quot; &quot;body_mass_g&quot; ## [7] &quot;sex&quot; &quot;year&quot; 10.2.1 base R package # Define color for each of the 3 penguine species colors &lt;- c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;) colors &lt;- colors[as.numeric(penguins$species)] # Define shapes shapes = c(16, 17, 18) shapes &lt;- shapes[as.numeric(penguins$species)] plot(x = penguins$flipper_length_mm, y = penguins$body_mass_g, col = colors, pch = shapes, xlab = &quot;Flipper Length&quot;, ylab = &quot;Body Mass&quot; ) 10.2.2 gggplot2 Package ggplot2 is an R package dedicated to data visualization which is based on The Grammar of Graphics (Wilkinson 2012). #load ggplot2 package to make statistical graphics library(ggplot2) p &lt;- ggplot(penguins) + geom_point( aes(x = flipper_length_mm, y = body_mass_g, color = species, shape = species)) + xlab(&quot;Flipper Length&quot;)+ ylab(&quot;Body Mass&quot;) print(p) 10.2.3 plotly R package for interactive data visualization Interactive visualization focuses on graphic representations of data that improve the way we interact with information plotly is an R package for creating interactive web-based graphs via the open source JavaScript graphing library plotly.js. library(plotly) p &lt;- ggplot(penguins) + geom_point( aes(x = flipper_length_mm, y = body_mass_g, color = species, shape = species)) + xlab(&quot;Flipper Length&quot;)+ ylab(&quot;Body Mass&quot;) # The function ggplotly converts a ggplot2::ggplot() object to a plotly object. plotly::ggplotly(p) Method 2 library(plotly) fig &lt;- plot_ly(penguins, x = ~flipper_length_mm, y = ~body_mass_g, color = ~species, symbol = ~species, type = &quot;scatter&quot;) fig 10.3 Python Load data #load functions in palmerpenguins package from palmerpenguins import load_penguins penguins = load_penguins() # Return the first part of the dataset penguins.head() # Retrieve column names list(penguins.columns) 10.3.1 Matplotlib package Matplotlib is mainly deployed for basic plotting. Visualization using Matplotlib generally consists of bars, pies, lines, scatter plots and so on. # Import matplotlib to make statistical graphics. # By convention, it is imported with the shorthand sns. import matplotlib.pyplot as plt colors = {&#39;Adelie&#39;:&#39;blue&#39;, &#39;Gentoo&#39;:&#39;orange&#39;, &#39;Chinstrap&#39;:&#39;green&#39;} plt.scatter(penguins.flipper_length_mm, penguins.body_mass_g, c= penguins.species.apply(lambda x: colors[x])) plt.xlabel(&#39;Flipper Length&#39;) plt.ylabel(&#39;Body Mass&#39;) 10.3.2 seaborn Package Seaborn is an easy-to-use high level statistical plotting library which provides a variety of visualization patterns. It uses fewer syntax and has easily interesting default themes. It tries to provide a ‘grammar of graphics’ style way to create plots but in a pythonic style without getting the exact syntax from ggplot as in plotnine. Introduction to Seaborn # Import seaborn to make statistical graphics. # By convention, it is imported with the shorthand sns. import seaborn as sns #load functions in palmerpenguins package from palmerpenguins import load_penguins penguins = load_penguins() # Apply the default theme sns.set_theme() # sns.set_style(&#39;whitegrid&#39;) p = sns.relplot(x = &#39;flipper_length_mm&#39;, y =&#39;body_mass_g&#39;, hue = &#39;species&#39;, style = &#39;species&#39;, data = penguins) p.set_xlabels(&#39;Flipper Length&#39;) p.set_ylabels(&#39;Body Mass&#39;) The function relplot() is named that way because it is designed to visualize many different statistical relationships. The relplot() function has a convenient kind parameter that lets you easily switch to this alternate representation: scatterplot() with kind=\"scatter\"; the default and lineplot() with kind=\"line\". 10.3.3 plotnine package https://pypi.org/project/plotnine/ plotnine is an implementation of a grammar of graphics in Python, it is based on ggplot2. The grammar allows users to compose plots by explicitly mapping data to the visual objects that make up the plot. Plotting with a grammar is powerful, it makes custom (and otherwise complex) plots are easy to think about and then create, while the simple plots remain simple. NOTE: R vs Python Syntax Unlike in R, now all the variables must be enclosed by single quotes from plotnine import * # unlike in R, now all the variables must be enclosed by single quotes (ggplot(penguins) + geom_point(aes(x = &#39;flipper_length_mm&#39;, y = &#39;body_mass_g&#39;, color = &#39;species&#39;, shape = &#39;species&#39;)) + xlab(&quot;Flipper Length&quot;)+ ylab(&quot;Body Mass&quot;)) 10.3.4 plotly Python library for interactive data visualization The plotly.express (Plotly Express or PX) module contains functions that can create entire figures at once. It is usually imported as px. Plotly Express is a built-in part of the plotly library. import plotly.express as px fig = px.scatter(penguins, x=&quot;flipper_length_mm&quot;, y=&quot;body_mass_g&quot;, color= &quot;species&quot;, symbol= &quot;species&quot;, labels=dict(flipper_length_mm=&quot;Flipper Length&quot;, body_mass_g=&quot;Body Mass&quot;)) fig.show() .MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute} .MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0} .MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px} .MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important} .MathJax_Hover_Arrow:hover span {background-color: #CCC!important} #MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')} #MathJax_About.MathJax_MousePost {outline: none} .MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')} .MathJax_MenuItem {padding: 1px 2em; background: transparent} .MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em} .MathJax_MenuActive .MathJax_MenuArrow {color: white} .MathJax_MenuArrow.RTL {left: .5em; right: auto} .MathJax_MenuCheck {position: absolute; left: .7em} .MathJax_MenuCheck.RTL {right: .7em; left: auto} .MathJax_MenuRadioCheck {position: absolute; left: .7em} .MathJax_MenuRadioCheck.RTL {right: .7em; left: auto} .MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic} .MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px} .MathJax_MenuDisabled {color: GrayText} .MathJax_MenuActive {background-color: #606872; color: white} .MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8} .MathJax_ContextMenu:focus {outline: none} .MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none} #MathJax_AboutClose {top: .2em; right: .2em} .MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px} .MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0} .MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px} .MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important} .MathJax_MenuClose:hover span {background-color: #CCC!important} .MathJax_MenuClose:hover:focus {outline: none} .MathJax_Preview .MJXf-math {color: inherit!important} .MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none} .MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important} #MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')} #MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)} #MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0} #MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)} .MathJax_Preview {color: #888} #MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap} #MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px} .MathJax_Error {color: #CC0000; font-style: italic} .MJXp-script {font-size: .8em} .MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right} .MJXp-bold {font-weight: bold} .MJXp-italic {font-style: italic} .MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif} .MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif} .MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif} .MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif} .MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif} .MJXp-largeop {font-size: 150%} .MJXp-largeop.MJXp-int {vertical-align: -.2em} .MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse} .MJXp-display {display: block; text-align: center; margin: 1em 0} .MJXp-math span {display: inline-block} .MJXp-box {display: block!important; text-align: center} .MJXp-box:after {content: \" \"} .MJXp-rule {display: block!important; margin-top: .1em} .MJXp-char {display: block!important} .MJXp-mo {margin: 0 .15em} .MJXp-mfrac {margin: 0 .125em; vertical-align: .25em} .MJXp-denom {display: inline-table!important; width: 100%} .MJXp-denom > * {display: table-row!important} .MJXp-surd {vertical-align: top} .MJXp-surd > * {display: block!important} .MJXp-script-box > * {display: table!important; height: 50%} .MJXp-script-box > * > * {display: table-cell!important; vertical-align: top} .MJXp-script-box > *:last-child > * {vertical-align: bottom} .MJXp-script-box > * > * > * {display: block!important} .MJXp-mphantom {visibility: hidden} .MJXp-munderover, .MJXp-munder {display: inline-table!important} .MJXp-over {display: inline-block!important; text-align: center} .MJXp-over > * {display: block!important} .MJXp-munderover > *, .MJXp-munder > * {display: table-row!important} .MJXp-mtable {vertical-align: .25em; margin: 0 .125em} .MJXp-mtable > * {display: inline-table!important; vertical-align: middle} .MJXp-mtr {display: table-row!important} .MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em} .MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0} .MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0} .MJXp-mlabeledtr {display: table-row!important} .MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0} .MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0} .MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%} .MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)} .MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)} .MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)} .MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)} .MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)} .MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)} .MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)} .MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)} .MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)} .MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)} .MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid} .MathJax_Preview {color: #888} #MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap} #MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px} .MathJax_Error {color: #CC0000; font-style: italic} 170180190200210220230250030003500400045005000550060006500speciesAdelieGentooChinstrapFlipper LengthBody Mass.cls-1 {fill: #3f4f75;} .cls-2 {fill: #80cfbe;} .cls-3 {fill: #fff;}plotly-logomark References "],["model.html", "Chapter 11 Model", " Chapter 11 Model WIP "],["communicate.html", "Chapter 12 Communicate", " Chapter 12 Communicate WIP "],["advanced-r-and-python.html", "Chapter 13 Advanced R and Python 13.1 Time Series Forecasting", " Chapter 13 Advanced R and Python WIP 13.1 Time Series Forecasting R Python fable-Forecasting Models for Tidy Time Series statsmodels- Statistics based models forecast- Forecasting Functions for Time Series and Linear Models sktime- A unified framework for machine learning with time series \\(\\text{}\\) GluonTS- Deep learning-based models. "],["jupyter-notebooks.html", "Chapter 14 Jupyter Notebooks 14.1 How to install Jupyter environment? 14.2 How to run or open Jupyter Notebooks? 14.3 Shutdown the Jupyter Notebook Local Server", " Chapter 14 Jupyter Notebooks The Jupyter Notebook is an open-source web application that allows the user to create and share documents that contain live code, equations, visualizations, and narrative text. JupyterLab is an advanced version of Jupyter Notebook interface. It brings the classic notebooks, text editor, terminal, and directory viewer all under one roof. However, both operate in a similar fashion. 14.1 How to install Jupyter environment? First, open a new command prompt (Windows) or terminal (Mac/Linux) on your workstation, and second, execute the following command: jupyter notebook If the above command fails, first, you need to install python on your workstation. There are two popular methods to install Python on your workstation. Installing Python using Anaconda Distribution Installing Raw Python Click on this link. It will guide you to install python. After installing python using one of the above methods, then we need to installing Jupyter Notebook using either Anaconda or pip. 14.2 How to run or open Jupyter Notebooks? After you have installed the Jupyter Notebook on your computer, you are ready to run the notebook server. Keep the terminal open as it is. It will then open the default web browser with the URL mentioned in the command prompt or terminal. When the notebook opens in your browser, you will see the Notebook Homepage 14.3 Shutdown the Jupyter Notebook Local Server You can also close your terminal by typing the command exit and hitting Enter. You can also shutdown a Jupyter Notebook session by clicking in the Terminal window and clicking Ctrl+c. You will be asked to confirm that you want to Shutdown this notebook server (y/[n])?. Type y and hit Enter to confirm. Then, you can close the Terminal by typing the command exit and hitting Enter. "],["working-with-jupyter-notebook.html", "Chapter 15 Working with jupyter notebook", " Chapter 15 Working with jupyter notebook open temrinal Type jupyter notebook Go to –&gt; new –&gt; folder (or select and exiting folder from the files list) Then creat jupyter notebook new–&gt; Python 3 "],["working-with-pycharm.html", "Chapter 16 Working with pycharm 16.1 install packages 16.2 Install Python package using Jupyter Notebook", " Chapter 16 Working with pycharm First install pycharm Open pycharm Create a project (select a location) Open terminal Type jupyter notebook Create jupyter notebook Quit notebook 16.1 install packages python -m pip install &lt;package&gt; must read what toavoide: https://jakevdp.github.io/blog/2017/12/05/installing-python-packages-from-jupyter/ 16.2 Install Python package using Jupyter Notebook https://www.geeksforgeeks.org/install-python-package-using-jupyter-notebook/ import sys !{sys.executable} -m pip install [package_name] "],["references.html", "References", " References "]]
